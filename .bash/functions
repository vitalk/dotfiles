#!/usr/bin/env bash

# create a new directory and enter it
function md() {
    mkdir -p "$1" && cd "$1"
}

# create a data url from image or font
function dataurl() {
    if [[ $# -eq 1 && -e "$1" ]]; then
        for ext in "ttf" "woff" "eot" "svg"; do
            [[ ${1##*.} -eq $ext ]] && type="font"
        done;
        echo "data:${type:-"image"}/${1##*.};base64,`openssl base64 -in "$1"`" | tr -d '\n'
    fi;
}

# generate random string
# $1 - number of chars, default 32
# $2 - include special chars like *&^, etc
function randstr() {
    [ "$2" == 0 ] && alphabet="[:alnum:]" || alphabet="[:graph:]"
    cat /dev/urandom | tr -cd "$alphabet" | head -c ${1:-32}
    echo
}

# Usage: push_ssh_cert [-c <certificate>] host1 host2
# push SSH public key <certificate> to remote hosts
function push_ssh_cert() {
    local host cert=$(whoami)
    [[ "$1" == "-c" && ! -z "$2" ]] && { cert=$2; shift 2; }
    test -f ~/.ssh/$cert || ssh-keygen -t dsa -f $cert
    for host in "$@"; do
        ssh $host 'cat >> ~/.ssh/authorized_keys' < ~/.ssh/$cert
    done
}

# simple bash todo implementation
# TODO: todone filter
TODO=~/.todo
function todo() {
    if [ $# == "0" ]; then
        if [ `cat $TODO | wc -l` == "0" ]; then
            echo "There is no todos yet";
        else cat $TODO; fi;
    else n=$(($(tail -1 $TODO | cut -d ' ' -f 1)+1)); echo "$n â‡¾ $@" >> $TODO; fi
}
function todone() { sed -i -e "/^$*/d" $TODO; }

# returns current ip address or ip specified by interface
function ip {
    if [ -z "$1" ]; then
        iface=wlan0;
    else
        iface="$1";
    fi
    /sbin/ifconfig "$iface" | grep inet | awk '{print $2}' | sed 's/addr://' | grep .
}
